(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{523:function(e,t,a){e.exports=a.p+"assets/img/react-tools-1.d2136917.png"},524:function(e,t,a){e.exports=a.p+"assets/img/react-dev-tools.0bfbe112.png"},525:function(e,t,a){e.exports=a.p+"assets/img/rn-env-check.925c71ce.png"},526:function(e,t,a){e.exports=a.p+"assets/img/eas-dashboard.9d3f3ac4.png"},527:function(e,t,a){e.exports=a.p+"assets/img/xcode-scheme.dead0006.png"},528:function(e,t,a){e.exports=a.p+"assets/img/ios-device-select.166b0a99.png"},529:function(e,t,a){e.exports=a.p+"assets/img/select-devices.89732885.png"},530:function(e,t,a){e.exports=a.p+"assets/img/ios-build-preview.b22d32da.png"},531:function(e,t,a){e.exports=a.p+"assets/img/ios-internal-build.4f5150a8.png"},532:function(e,t,a){e.exports=a.p+"assets/img/build-version-list.f01616bf.png"},586:function(e,t,a){"use strict";a.r(t);var n=a(43),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("PageHeader"),e._v(" "),n("h2",{attrs:{id:"linked-in"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linked-in"}},[e._v("#")]),e._v(" Linked In")]),e._v(" "),n("ul",[n("li",[e._v("We have a private LinkedIn Group for graduates of the program")]),e._v(" "),n("li",[e._v("Everyone who makes it to the MAD9145 Applied Project course will be invited to join this group.")]),e._v(" "),n("li",[e._v("This is where we post contracts and jobs for graduates.")]),e._v(" "),n("li",[e._v("It is also a place where you can post jobs or look for partners for ventures of your own.")]),e._v(" "),n("li",[e._v("You can use it to connect with your classmates or with former Alumni of the program.")]),e._v(" "),n("li",[e._v("If you do NOT have a Linked In profile yet, please create one today.")]),e._v(" "),n("li",[e._v("Send a connection request to "),n("a",{attrs:{href:"https://www.linkedin.com/in/steve-griffith/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Steve on Linked In"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("li",[e._v("After he accepts all the invitations he will invite you to the group.")])]),e._v(" "),n("h2",{attrs:{id:"debugging-react-native-apps"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#debugging-react-native-apps"}},[e._v("#")]),e._v(" Debugging React Native Apps")]),e._v(" "),n("p",[e._v("React Native switched from the JavaScriptCore JS Engine to the Hermes Engine in 2022. This has led to much better performance with React Native Apps.")]),e._v(" "),n("p",[e._v("In 2023 Expo switched to using this new JS Engine too.")]),e._v(" "),n("p",[e._v("While this means better performance and smaller app sizes, it has meant that there have been fewer Development and Debugging tools in the short term.")]),e._v(" "),n("p",[e._v("Currently, if you have a React Native app running through the "),n("code",[e._v("Expo Go")]),e._v(" app you can open the developer menu and select the "),n("code",[e._v("JS Debugger")]),e._v(". This will open a standalone copy of the Chrome Dev Tools and\nlet you use those tools to see JS errors, console.log statements, and monitor the Network requests.")]),e._v(" "),n("p",[e._v("A better choice for debugging is to install the "),n("code",[e._v("Expo Tools")]),e._v(" and "),n("code",[e._v("React Native Tools")]),e._v(" extensions in "),n("code",[e._v("VS Code")]),e._v(". Once those are installed you can start using any of the commands from the Command Palette in VS Code.")]),e._v(" "),n("p",[e._v("Open the Command Palette with "),n("code",[e._v("Command + Shift + P")]),e._v(". Then type "),n("code",[e._v('"React Native"')]),e._v(" to see the list of possible commands.")]),e._v(" "),n("p",[n("img",{attrs:{src:a(523),alt:"Command Palette for React Dev Tools"}})]),e._v(" "),n("p",[e._v("Run the "),n("code",[e._v("check development environment config")]),e._v(" command as shown in the image above. This will test your computer for Android and iOS configuration requirements.")]),e._v(" "),n("p",[e._v("To launch the new React Dev Tools for your app we need to set up one more thing.")]),e._v(" "),n("p",[e._v("Open the "),n("code",[e._v("Run and Debug")]),e._v(" panel by clicking the button above the extensions button that looks like a play button with a bug on it.")]),e._v(" "),n("p",[e._v("First, close any project files that are currently open. Then in the "),n("code",[e._v("Run and Debug")]),e._v(" panel click on the link to create a "),n("code",[e._v("launch.json")]),e._v(" file. (It will create a "),n("code",[e._v(".vscode")]),e._v(" folder with a "),n("code",[e._v("launch.json")]),e._v(" file inside that folder). In the first menu that appears you should see a list of choices that includes "),n("code",[e._v("React Native")]),e._v(". Select the "),n("code",[e._v("React Native")]),e._v(" option.")]),e._v(" "),n("p",[e._v("In the second menu we need to select ONLY the two options:")]),e._v(" "),n("ul",[n("li",[e._v("Debug Android Hermes")]),e._v(" "),n("li",[e._v("Debug iOS Hermes")])]),e._v(" "),n("p",[e._v("Now you should have a "),n("code",[e._v("launch.json")]),e._v(" file with the settings and support for these debuggers.")]),e._v(" "),n("p",[e._v("Now you can start your React Native app from the Terminal with "),n("code",[e._v("npm run start")]),e._v(". Then launch your iOS or Android app with the "),n("code",[e._v("i")]),e._v(" or "),n("code",[e._v("a")]),e._v(" keys.")]),e._v(" "),n("p",[e._v("Once your app is running you can use "),n("code",[e._v("Shift + m")]),e._v(" to see the additonal tools list. Select "),n("code",[e._v("React Dev Tools")]),e._v(" from the list and it will open a Chrome Dev Tools window with a searchable display of all\ncomponents and their properties.")]),e._v(" "),n("p",[n("img",{attrs:{src:a(524),alt:"React Dev Tools"}})]),e._v(" "),n("p",[n("a",{attrs:{href:"https://docs.expo.dev/debugging/tools/#debugging-with-react-devtools",target:"_blank",rel:"noopener noreferrer"}},[e._v("Expo reference for debugging"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("Once you have run the Command Palette "),n("code",[e._v("React Native: Check development environment configuration")]),e._v(" command. It will look at all the required tech for android and ios apps. When complete, you should see a list with checkmarks beside each item like the image below.")]),e._v(" "),n("p",[n("img",{attrs:{src:a(525),alt:"Environment Check Results"}})]),e._v(" "),n("p",[e._v("If you are missing "),n("code",[e._v("watchman")]),e._v(" or "),n("code",[e._v("ios-deploy")]),e._v(" or "),n("code",[e._v("gradle")]),e._v(" you can use HomeBrew to install them.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("brew "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" watchman\nbrew "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" ios-deploy\nbrew "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" gradle\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("If Android ENV is missing, it means that you need to create a new Environment variable called "),n("code",[e._v("ANDROID_SDK_ROOT")]),e._v(" set to the location of your android sdk. This should be done inside your "),n("code",[e._v(".zshrc")]),e._v(" file from your user home folder. "),n("code",[e._v("/Users/<yourusername>/.zshrc")]),e._v(".")]),e._v(" "),n("p",[e._v("As an example, this is what the first two lines of my "),n("code",[e._v(".zshrc")]),e._v(" file looks like.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ANDROID_SDK_ROOT")]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/Users/steve/Library/Android/sdk\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("If you have "),n("code",[e._v("x")]),e._v("s beside the ADB and Emulator items, then you need to update your PATH variable.")]),e._v(" "),n("p",[e._v("You can have as many lines as you want in your "),n("code",[e._v(".zshrc")]),e._v(" file that start with "),n("code",[e._v("export PATH=")]),e._v(". Each one will be adding a new string path for some application to the full "),n("code",[e._v("PATH")]),e._v(" string.")]),e._v(" "),n("p",[e._v("Usually all the path values are put together in a single line. You can split them into multiple lines if you want as long as each line starts with "),n("code",[e._v("export PATH=")]),e._v(". Every line should also include "),n("code",[e._v("$PATH")]),e._v(" (the current value of the PATH variable) at the start or end.")]),e._v(" "),n("p",[e._v("Between each of the parts of the path you need to have a "),n("code",[e._v(":")]),e._v(".")]),e._v(" "),n("p",[e._v("The three new parts that we need to add are all folders inside the Android sdk folder.")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("emulator")])]),e._v(" "),n("li",[n("code",[e._v("platform-tools")])]),e._v(" "),n("li",[n("code",[e._v("tools/bin")])])]),e._v(" "),n("p",[e._v("So, you can write it either if these two ways.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/Users/steve/.npm-packages/bin:"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),n("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ANDROID_SDK_ROOT")]),e._v("/emulator:"),n("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ANDROID_SDK_ROOT")]),e._v("/platform-tools:"),n("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ANDROID_SDK_ROOT")]),e._v("/tools/bin\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("or")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/Users/steve/.npm-packages/bin:"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ANDROID_SDK_ROOT")]),e._v("/emulator:"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ANDROID_SDK_ROOT")]),e._v("/platform-tools:"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ANDROID_SDK_ROOT")]),e._v("/tools/bin:"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("Once you have all these installed (you will have to restart VS Code) re-run the Command Palette React Native: check command to confirm that you have everything ready.")]),e._v(" "),n("h2",{attrs:{id:"finding-packages-for-react-native"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#finding-packages-for-react-native"}},[e._v("#")]),e._v(" Finding packages for React Native")]),e._v(" "),n("p",[e._v("We have used the "),n("a",{attrs:{href:"https://reactnative.dev",target:"_blank",rel:"noopener noreferrer"}},[e._v("reactnative.dev"),n("OutboundLink")],1),e._v(" and "),n("a",{attrs:{href:"https://expo.dev",target:"_blank",rel:"noopener noreferrer"}},[e._v("expo.dev"),n("OutboundLink")],1),e._v(" websites to find components and APIs that work with our React Native apps.")]),e._v(" "),n("p",[e._v("As a more general site "),n("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("npmjs.com"),n("OutboundLink")],1),e._v(" has all packages that you can install in a project with npm. This includes React Native, but also everything javascript.")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://reactnative.directory/",target:"_blank",rel:"noopener noreferrer"}},[e._v("reactnative.directory"),n("OutboundLink")],1),e._v(" is another site with a list of available React Native packages that you can use and which platforms that they are able to run on. Each package also will indicate whether or not it can run on the newer React Native architecture. This is more of a filtered list of what you would find on npmjs.com where the package is specifically for React Native.")]),e._v(" "),n("h2",{attrs:{id:"more-about-react-native-builds"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#more-about-react-native-builds"}},[e._v("#")]),e._v(" More about React Native Builds")]),e._v(" "),n("p",[e._v("Up to this point in our React Native journey, we have relied on ExpoGo. Expo Go is the client app that we install in our Simulators, Emulators, and physical devices. It acts as a sandbox for running our JS bundle that is created and hosted by Metro.")]),e._v(" "),n("p",[e._v("For Expo to be able to run our React Native app, we need to have the metro bundler and server running. We can use any of the top 3 commands to launch the Expo Go version of our app. Either of the bottom two can be used to create the Expo Build version of the app.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run start\n"),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" start\nnpx expo start\n\n\nnpx expo run\nnpx expo\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v("In our "),n("code",[e._v("package.json")]),e._v(" file")]),e._v(" "),n("p",[e._v("All of the commands run the metro bundler to convert our JS/JSX/TS/TSX files and assets into an app that can be run through the Expo Go client app or with Expo Build as a separate app. Both versions still need the Metro server running.")]),e._v(" "),n("h3",{attrs:{id:"local-development-builds"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#local-development-builds"}},[e._v("#")]),e._v(" Local Development Builds")]),e._v(" "),n("p",[e._v("Now, we can actually create the android and ios native apps to install outside of Expo Go. Run this command to create the "),n("code",[e._v("android")]),e._v(" and "),n("code",[e._v("ios")]),e._v(" folders and do the initial builds for your app.")]),e._v(" "),n("p",[e._v("If you want to be able to properly test your launcher icons and splash screens then you need to move past Expo Go.")]),e._v(" "),n("p",[e._v("You need an actual Android or iOS application that is installed on its own. We want to use "),n("code",[e._v("ExpoBuild")]),e._v(" instead of "),n("code",[e._v("ExpoGo")]),e._v(".")]),e._v(" "),n("p",[n("code",[e._v("ExpoBuild")]),e._v(" is a native application built from our project which still needs to have the Metro bundler and server running.")]),e._v(" "),n("p",[e._v("We start by running this command.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("npx expo prebuild --clean\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[n("a",{attrs:{href:"https://docs.expo.dev/workflow/prebuild/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Expo Prebuild reference"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("This will create "),n("strong",[e._v("both")]),e._v(" the android and ios folders and actually create the Android and iOS projects inside those folders. The first time you run this, it will take a few minutes for the gradle and cocoapods parts to run.")]),e._v(" "),n("p",[e._v("Any time you change something in the package.json or app.json files, or add new versions of asset files, then you will need to re-run the "),n("code",[e._v("prebuild")]),e._v(" command to update the projects.")]),e._v(" "),n("p",[e._v("After we create the "),n("code",[e._v("android")]),e._v(" and "),n("code",[e._v("ios")]),e._v(" project folders, we will start our server as per normal. We can run the raw command like this, and be prompted for which platform we want to build:")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("npx expo run\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("Or we can specific which to launch and run both these commands separately.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("npx expo run:android\nnpx expo run:ios\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("Now you will be creating the "),n("code",[e._v("ExpoBuild")]),e._v(" version of your app that can be launched on a Simulator or Emulator. It will actually be using the XCode tools or the Android build tools to create the project so it can be installed.")]),e._v(" "),n("blockquote",[n("p",[e._v("This WILL take longer than the Expo Go launch.")])]),e._v(" "),n("p",[e._v("When complete, this "),n("code",[e._v("run")]),e._v(" command will install the app on the simulator/emulator and then prompt you to launch the app. It will be a stand-alone app that uses "),n("code",[e._v("ExpoBuild")]),e._v(" instead of "),n("code",[e._v("ExpoGo")]),e._v(". So, it will actually be a native build bundle running the app, not the Expo Go app with a JS bundle.")]),e._v(" "),n("p",[e._v("If you look at the terminal below the QR code that appears after building, you will see a message that says "),n("code",[e._v("> Using development build")]),e._v(" and "),n("code",[e._v("> Press s | switch to Expo Go")])]),e._v(" "),n("p",[e._v("From this point on, in your project, you will be using "),n("code",[e._v("ExpoBuild")]),e._v(" instead of "),n("code",[e._v("ExpoGo")]),e._v(". It will take longer to build each time. However, because it is still using Metro builder, we will get Hot reloads when we are editing our JSX and components.")]),e._v(" "),n("p",[e._v("This will be a true preview version of the app like what your user will see.")]),e._v(" "),n("p",[e._v("Note that it will have its own icon on the screen, and is not launching from the "),n("code",[e._v("Expo Go")]),e._v(" app.")]),e._v(" "),n("p",[e._v("If you want to launch this on a physical device instead then you can add the "),n("code",[e._v("--device")]),e._v(" flag.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("npx expo run:android --device\nnpx expo run:ios --device\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("For Android you just need to have your device configured to be used as a developer device and have it connected to your laptop. If you want it deployed to a physical device then you should only have that device connected. Shut down any running emulator.")]),e._v(" "),n("p",[e._v("For iOS you will need to have your Xcode configured with the mobile provisioning profile that includes the device and your own developer certificate on your MacBook.")]),e._v(" "),n("p",[e._v("If you have the Android Studio and iOS XCode development environments set up on your MacBook then you can do a "),n("code",[e._v("Release")]),e._v(" version of your app instead of a "),n("code",[e._v("Debug")]),e._v(" version of the app.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("npx expo run:android --device --variant release\nnpx expo run:ios --device --configuration Release\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[e._v("Don't Forget")]),e._v(" "),n("p",[e._v("If you are running the "),n("code",[e._v("npx expo prebuild")]),e._v(" command on your project to creat the android and ios folders, then definitely add those to your .gitignore file.")]),e._v(" "),n("p",[n("code",[e._v("/android")]),e._v(" "),n("code",[e._v("/ios")])])]),e._v(" "),n("h3",{attrs:{id:"dev-tools"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dev-tools"}},[e._v("#")]),e._v(" Dev Tools")]),e._v(" "),n("p",[e._v("If we want to use a better version of the dev tools with this build then we should add "),n("code",[e._v("expo-dev-client")]),e._v(" to our project too.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("npx expo "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" expo-dev-client\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("Remember to re-run the "),n("code",[e._v("prebuild")]),e._v(" command after adding this package.")]),e._v(" "),n("p",[e._v("If you want to learn more about this dev tool, you can "),n("a",{attrs:{href:"https://docs.expo.dev/debugging/tools/#developer-menu",target:"_blank",rel:"noopener noreferrer"}},[e._v("read this"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"eas-and-remote-development-builds"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eas-and-remote-development-builds"}},[e._v("#")]),e._v(" EAS and Remote Development Builds")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://expo.dev/eas",target:"_blank",rel:"noopener noreferrer"}},[e._v("EAS - Expo Application Services"),n("OutboundLink")],1),e._v(" is an online service that you can use to build your Android and iOS apps, without having to configure your local environment.")]),e._v(" "),n("blockquote",[n("p",[e._v("A tool for developers who are less awesome than you. Meant for those mere mortals who didn't sell their children to buy a MacBook Pro.")])]),e._v(" "),n("p",[e._v("This is a service that has a slower free tier that anyone can use and a paid subscription that lets you run the builds faster.")]),e._v(" "),n("p",[e._v("For this to work, we need to have an EXPO account. Go to the expo.dev website and create a free account.")]),e._v(" "),n("p",[e._v("Then in the terminal we need to globally install the "),n("code",[e._v("eas-cli")]),e._v(" program.")]),e._v(" "),n("p",[e._v("Here is the list of eas commands that you will want to use. The lines that start with "),n("code",[e._v("#")]),e._v(" are comments.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i -g eas-cli\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# install the EAS command line app globally")]),e._v("\neas -v\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# check if eas-cli is installed and find the version")]),e._v("\neas login\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# login to the EAS service for your account")]),e._v("\neas "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("whoami")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# check if you are currently logged into EAS")]),e._v("\neas init\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# initialize your project locally and on the Expo EAS dashboard")]),e._v("\neas build:configure\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# You will be prompted for All, Android, or iOS")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Uploads the project to the dashboard")]),e._v("\neas build --profile development --platform android\neas build --profile development --platform ios\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Actually build the project on EAS")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br")])]),n("p",[e._v("Once your project has been built and is ready on the Expo dashboard then you will be able to see QR codes to install the app on your device.")]),e._v(" "),n("p",[n("img",{attrs:{src:a(526),alt:"EAS Dashboard screenshot"}})]),e._v(" "),n("p",[e._v("The above image shows a screenshot from inside a project build. From the Dashboard we click on a project. Then click on an iOS or Android build. Then click the "),n("code",[e._v("Install")]),e._v(" button shown in the screenshot.")]),e._v(" "),n("p",[e._v("The install button will reveal the QR code and the URL represented in the QR code. That webpage, when opened on the device, will have an install button. The user can click the install button to download and then install the app.")]),e._v(" "),n("p",[e._v("This app will NEED the Metro server to be running still.")]),e._v(" "),n("h3",{attrs:{id:"stand-alone-app-installs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stand-alone-app-installs"}},[e._v("#")]),e._v(" Stand Alone App Installs")]),e._v(" "),n("p",[e._v("So, the above approaches will let us build real preview versions of our React Native apps. They can be built locally or through EAS. However, in both cases we will still need to have our Metro bundler and server running.")]),e._v(" "),n("p",[e._v("This is absolutely fine or our development team... but not for a client. If we want to sent a preview version of our app to a client, then we can't have them be dependent on our dev server being up and running when they open the app.")]),e._v(" "),n("p",[e._v("We are able to open the "),n("code",[e._v(".xcworkspace")]),e._v(" file from inside the "),n("code",[e._v("ios")]),e._v(" folder in Xcode. From here you can edit the team details, the build configuration details, etc.")]),e._v(" "),n("p",[n("img",{attrs:{src:a(527),alt:"xcode scheme"}})]),e._v(" "),n("p",[e._v("Once the project is opened in XCode, click on the name of the project at the top to open the menu and click on Edit Scheme. This will open a dialog window. Under the "),n("code",[e._v("info")]),e._v(" heading change the "),n("code",[e._v("Build Configuration")]),e._v(" from "),n("code",[e._v("Debug")]),e._v(" to "),n("code",[e._v("Release")]),e._v(".")]),e._v(" "),n("p",[e._v("Make sure you click on your project in the left-hand panel and then under the heading "),n("code",[e._v("Signing & Capabilities")]),e._v(" have your correct Team and provisioning profile loaded and selected.")]),e._v(" "),n("p",[e._v("Also make sure you have the right device or simulator selected and click the run button to build and launch the app.")]),e._v(" "),n("p",[e._v("If you don't want to open XCode to do this, you still need to open XCode to make sure that your provisioning profile is installed and configured. However, after that is done, then, you can build a release version from the Terminal.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("npx expo run:ios --device --configuration Release\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("You will be prompted to select a device or simulator from a list.")]),e._v(" "),n("p",[n("img",{attrs:{src:a(528),alt:"release build device selection"}})]),e._v(" "),n("p",[e._v("Running this will create a local release version of your ios app and open it in the selected device. It is using "),n("code",[e._v("ExpoBuild")]),e._v(" and the Metro bundler and server again.")]),e._v(" "),n("p",[e._v("For Android you can open your "),n("code",[e._v("android")]),e._v(" folder in Android Studio and edit the variant from the menu in the bottom left hand corner. Or you can run this command:")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("npx expo run:android --device --variant release\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("This will compile and build a release version of your app using "),n("code",[e._v("ExpoBuild")]),e._v(" plus the Metro bundler and server.")]),e._v(" "),n("p",[n("strong",[e._v("NOW")]),e._v(" to make this happen locally AND give us the ability to have an app file that we can distribute to clients and testers.")]),e._v(" "),n("p",[e._v("For Android we can run the following in the Terminal")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" android\n./gradlew assembleRelease\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("Which should build the project inside the Android folder. You will be able to find your "),n("code",[e._v(".apk")]),e._v(" file in the "),n("code",[e._v("/android/build/outputs/apk/release/")]),e._v(" folder.")]),e._v(" "),n("p",[e._v("If you have already done the "),n("code",[e._v("eas init")]),e._v(" and "),n("code",[e._v("eas build:configure")]),e._v(" for android then we can also use the EAS command to build locally.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("eas build --profile development --platform android --local\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("The "),n("code",[e._v("eas build")]),e._v(" command will check for and ask you if you want to install the "),n("code",[e._v("expo-dev-client")]),e._v(" package in your project.Then it will run through the same build process as the EAS server, but locally, assuming that you have your Android environment set up properly locally.")]),e._v(" "),n("p",[e._v("When complete, this local eas build will create an "),n("code",[e._v(".apk")]),e._v(" file in your root folder that you can share with your testers.")]),e._v(" "),n("p",[e._v("For iOS it is the same idea. Run the build command with the "),n("code",[e._v("--local")]),e._v(" flag added.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("eas build --profile development --platform android --local\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("Again, you need to have the iOS dev environment configured locally for this to work. Running the command will ask a series of questions and have you log into your Apple Developer account. (or the College Media & Design one).")]),e._v(" "),n("p",[n("img",{attrs:{src:a(529),alt:"select devices"}})]),e._v(" "),n("p",[e._v("You will also be asked to include devices. You can import these from our app dev account OR you can select the "),n("code",[e._v("Website")]),e._v(" option, which will provide a webpage, where the test user will be able to scan a QR code to download the provisioning profile and test on their device.")]),e._v(" "),n("p",[e._v("When complete you will have an "),n("code",[e._v(".ipa")]),e._v(" file at the root of your project.")]),e._v(" "),n("p",[e._v("These .ipa and .apk development distribution files can be shared but will still require the Metro server to be running.")]),e._v(" "),n("h3",{attrs:{id:"installing-without-metro-server"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#installing-without-metro-server"}},[e._v("#")]),e._v(" Installing without Metro server")]),e._v(" "),n("h4",{attrs:{id:"ios-installs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ios-installs"}},[e._v("#")]),e._v(" iOS Installs")]),e._v(" "),n("p",[e._v("On "),n("strong",[e._v("iOS")]),e._v(" we can use EAS to create a version of the app that we can install on a device or simulator that will "),n("strong",[e._v("NOT")]),e._v(" require us to have the Metro server running.")]),e._v(" "),n("p",[e._v("In the "),n("code",[e._v("eas.json")]),e._v(" file that was created by running "),n("code",[e._v("eas init")]),e._v(" and "),n("code",[e._v("eas build:configure")]),e._v(", make sure that there is a "),n("code",[e._v("preview")]),e._v(" setting with "),n("code",[e._v("distribution")]),e._v(" set to "),n("code",[e._v("internal")]),e._v(". If you want to be able to use the simulator, then add an "),n("code",[e._v('"ios"')]),e._v(" object with "),n("code",[e._v("simulator")]),e._v(" set to "),n("code",[e._v("true")]),e._v(".")]),e._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"build"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"preview"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"distribution"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"internal"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"ios"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"simulator"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("Then we can run the eas build command and instruct it to use the "),n("code",[e._v("preview")]),e._v(" build version.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("eas build --profile preview --platform ios\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("You should have your iOS development environment set up so those credentials can be uploaded with your project.")]),e._v(" "),n("p",[e._v("After the build process is complete, on the EAS website, you will see your "),n("code",[e._v("Simulator")]),e._v(" build complete along with a "),n("code",[e._v("Download")]),e._v(" button.")]),e._v(" "),n("p",[n("img",{attrs:{src:a(530),alt:"ios preview build with download button"}})]),e._v(" "),n("p",[e._v("Clicking the download button will let you download a compressed file. If you open that you will get an "),n("code",[e._v(".app")]),e._v(" file that you can drag onto your Simulator to install. It "),n("strong",[e._v("will")]),e._v(" run without the metro server.")]),e._v(" "),n("p",[e._v("If your client has a device that is not registered in your Apple Developer account, then you can get the UDID of their iPhone and run this command, BEFORE you run the build command.")]),e._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("eas device:create\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("If we run the same "),n("code",[e._v("eas build")]),e._v(" command again, but change the "),n("code",[e._v('"preview"')]),e._v(" settings in eas.json and set "),n("code",[e._v("simulator")]),e._v(" to "),n("code",[e._v("false")]),e._v(", then in addition to the "),n("code",[e._v("Simulator")]),e._v(" build will be an "),n("code",[e._v("internal iOS")]),e._v(" build with an "),n("code",[e._v("install")]),e._v(" button.")]),e._v(" "),n("p",[e._v("The version of the build command for a device, not a simulator, will also prompt you for your apple developer credentials, Algonquin College app dev team, plus device selection, before it runs the build. Most of this will be pulled directly from the installed provisioning profile that you downloaded from the developer.apple.com website.")]),e._v(" "),n("p",[n("img",{attrs:{src:a(531),alt:"iOS internal build Install button"}})]),e._v(" "),n("p",[e._v("When you click on the Install button on the EAS webpage you will be shown a QR code that you can scan with the iPhone's camera and tap the "),n("code",[e._v("Open with iTunes")]),e._v(" link. This will install the app on the phone.")]),e._v(" "),n("p",[e._v("Another way to install the app on a device is to install the Expo Orbit app from its Github Repo. If you click on the Orbit button and don't have it installed then you will be prompted to install it. "),n("a",{attrs:{href:"https://github.com/expo/orbit/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Orbit download page "),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[e._v("Open the Orbit app after you download the zip and open it. When you open it, you will see a list of available iOS simulators and any iPhone that is connected by USB. Select your connected device from that list. The Orbit app should be able to install the app on the phone for you without scanning as QR code.")]),e._v(" "),n("h4",{attrs:{id:"android"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#android"}},[e._v("#")]),e._v(" Android")]),e._v(" "),n("p",[e._v("For "),n("strong",[e._v("Android")]),e._v(" we can run the "),n("code",[e._v("eas build command")]),e._v(" too. First we should update our "),n("code",[e._v("eas.json")]),e._v(" file and add "),n("code",[e._v('"developmentClient": false,')]),e._v(" as an Android setting.")]),e._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"build"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"preview"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"distribution"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"internal"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"ios"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"simulator"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"android"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"developmentClient"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[e._v("eas build --profile preview --platform android\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("This will create a standalone build for Android, just like our standalone iOS one from above. When complete, we can click the "),n("code",[e._v("install")]),e._v(" button or use Orbit to install the app on our Android device.")]),e._v(" "),n("p",[e._v("On your dashboard, after the above steps, you will see the three versions of the build.")]),e._v(" "),n("p",[n("img",{attrs:{src:a(532),alt:"List of builds"}})]),e._v(" "),n("p",[e._v("Notice the "),n("code",[e._v("preview")]),e._v(" label in the profile column. Previously we were doing builds with the profile "),n("code",[e._v("development")]),e._v(".")]),e._v(" "),n("p",[e._v("It is possible to create your own profile names inside your "),n("code",[e._v("eas.json")]),e._v(" file.")]),e._v(" "),n("h3",{attrs:{id:"additional-resources"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#additional-resources"}},[e._v("#")]),e._v(" Additional resources")]),e._v(" "),n("p",[e._v("If you are looking to release your React Native app to the AppStore or Google Play, then here is "),n("a",{attrs:{href:"https://docs.expo.dev/distribution/app-stores/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Expo's Official Guide to Distributing Apps"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://reactnative.dev/docs/signed-apk-android",target:"_blank",rel:"noopener noreferrer"}},[e._v("The React Native guide to Google Play releases"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://reactnative.dev/docs/publishing-to-app-store",target:"_blank",rel:"noopener noreferrer"}},[e._v("The React Native guide to App Store releases"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("Here are a few YouTube videos that are fairly recent and that talk about the different types of builds that you can do for React Native.")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.youtube.com/watch?v=cs-zgHjt5RQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simon Grimm Expo Go, Expo Build and EAS"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://www.youtube.com/watch?v=VZL_e0cEwo8",target:"_blank",rel:"noopener noreferrer"}},[e._v("Expo EAS production build for iOS App Store"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://www.youtube.com/watch?v=nxlt8uwqhpE",target:"_blank",rel:"noopener noreferrer"}},[e._v("Expo EAS production build for PlayStore"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://www.youtube.com/watch?v=FdjczjkwQKE",target:"_blank",rel:"noopener noreferrer"}},[e._v("Expo Go versus Expo Build"),n("OutboundLink")],1)])])],1)}),[],!1,null,null,null);t.default=s.exports}}]);