(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{571:function(t,s,a){"use strict";a.r(s);var e=a(43),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("PageHeader"),t._v(" "),a("h1",{attrs:{id:"exercises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exercises"}},[t._v("#")]),t._v(" Exercises")]),t._v(" "),a("p",[t._v("These are the Hybrid exercises for MAD9135. See BS LMS for the exact due dates.")]),t._v(" "),a("p",[t._v("I would suggest that you read through all the material and do these simple exercises "),a("strong",[t._v("as soon as possible")]),t._v(". Don't wait until the React Native material gets harder or we start the Flutter section of the course. You do NOT need to wait until the due date before submitting these exercises.")]),t._v(" "),a("p",[t._v("All the Hybrid exercises are related to the "),a("code",[t._v("Dart")]),t._v(" programming language. "),a("code",[t._v("Dart")]),t._v(" is the language used for building Flutter applications. We will be covering Flutter in the second half of the semester. You will need to have a decent grasp of Dart before we start covering Flutter.")]),t._v(" "),a("p",[t._v("If you have ANY questions about these exercises, please either ask in class or post them on the #mad9135 channel on Slack so that everyone can see the answers.")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"#exercise-1"}},[t._v("Exercise 1")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#exercise-2"}},[t._v("Exercise 2")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#exercise-3"}},[t._v("Exercise 3")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#exercise-4"}},[t._v("Exercise 4")])])]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:"https://api.dart.dev/",target:"_blank",rel:"noopener noreferrer"}},[t._v("full reference for all the Dart core and built-in classes is here"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"exercise-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exercise-1"}},[t._v("#")]),t._v(" Exercise 1")]),t._v(" "),a("h3",{attrs:{id:"dartpad-classes-and-datatypes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dartpad-classes-and-datatypes"}},[t._v("#")]),t._v(" Dartpad Classes and Datatypes")]),t._v(" "),a("p",[t._v("Dartpad used to let you connect your github account to DartPad. Then you could save your sample as a Gist from DartPad. Now, what you can do is create a new Gist that has a main.dart file. Place your code inside the main.dart file in your new Gist. Then to load the code in DartPage, just use the id of the Gist as the value for an id in the querystring. Here is "),a("a",{attrs:{href:"https://dartpad.dev/?id=b27a8f7b62ffdb255a9a6d1415a3e690",target:"_blank",rel:"noopener noreferrer"}},[t._v("a sample version - https://dartpad.dev/?id=b27a8f7b62ffdb255a9a6d1415a3e690"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("You will be submitting this exercise as a DartPad URL with the id for your Gist through BS LMS.")]),t._v(" "),a("p",[t._v("You are going to be building the "),a("code",[t._v("main")]),t._v(" function plus three classes. Two of the classes need to extend the first and "),a("code",[t._v("@override")]),t._v(" a method from the first. The two subclasses should also have at least one method that is unique to each. The two subclasses should also have at least one member field that is unique to each.")]),t._v(" "),a("div",{staticClass:"language-dart line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dolphin")]),t._v(" flipper "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dolphin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bottlenose'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Flipper is a ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("flipper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" dolphin.'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  flipper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'crab'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  flipper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shark'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  flipper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("swim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Kangaroo")]),t._v(" skippy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Kangaroo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Western Grey'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Skippy is a ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("skippy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("breed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" kangaroo.'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  skippy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cow'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isPlant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  skippy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  skippy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'grass'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isPlant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//the parent super class")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" food"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Thanks for the ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("food")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dolphin")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  late "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" foodTypes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'crab'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'octopus'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'herring'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dolphin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" food"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foodTypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Thanks for the ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("food")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Yuck. I cannot eat ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("food")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("swim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Splish. Splash.'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Kangaroo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  late "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" breed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Kangaroo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("breed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" food"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expects a record like: (type: '', isPlant: true)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isPlant"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Yum! ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("food"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("!'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I only eat plants'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hop hop hop'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br"),a("span",{staticClass:"line-number"},[t._v("60")]),a("br"),a("span",{staticClass:"line-number"},[t._v("61")]),a("br"),a("span",{staticClass:"line-number"},[t._v("62")]),a("br"),a("span",{staticClass:"line-number"},[t._v("63")]),a("br")])]),a("p",[t._v("and the output from the above code is:")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Flipper is a bottlenose dolphin.\nThanks "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the crab\nYuck. I cannot eat shark\nSplish. Splash.\nSkippy is a Western Grey kangaroo.\nI only eat plants\nhop hop hop\nYum"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" grass"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("You need to make up your own three classes.")]),t._v(" "),a("p",[t._v("Your version should import "),a("code",[t._v("dart:math")]),t._v(" and use methods or properties from that package. Eg: "),a("code",[t._v("Random()")]),t._v(".")]),t._v(" "),a("p",[t._v("You program should include the following:")]),t._v(" "),a("ul",[a("li",[t._v("One parent super class that has a constructor and one method.")]),t._v(" "),a("li",[t._v("Two sub classes that each have at least one field and two methods.")]),t._v(" "),a("li",[t._v("At least one field that is a "),a("code",[t._v("String")]),t._v(".")]),t._v(" "),a("li",[t._v("At least one field that is an "),a("code",[t._v("int")]),t._v(".")]),t._v(" "),a("li",[t._v("At least one field that is a "),a("code",[t._v("List")]),t._v(".")]),t._v(" "),a("li",[t._v("At least one field that is a "),a("code",[t._v("double")]),t._v(".")]),t._v(" "),a("li",[t._v("At least one if statement.")]),t._v(" "),a("li",[t._v("Each method should have a "),a("code",[t._v("print()")]),t._v(" call, so you see something in the terminal when this runs.")]),t._v(" "),a("li",[t._v("A "),a("code",[t._v("main()")]),t._v(" function that instantiates each of the two sub classes at least once.")]),t._v(" "),a("li",[t._v("The "),a("code",[t._v("main()")]),t._v(" function should call each of the methods in the two sub classes at least once.")])]),t._v(" "),a("p",[t._v("Reference the notes in "),a("RouterLink",{attrs:{to:"/modules/hybrid/dart/1-start.html"}},[t._v("Dart Fundamentals")]),t._v(" and "),a("RouterLink",{attrs:{to:"/modules/hybrid/dart/2-classes.html"}},[t._v("Dart Classes")]),t._v(" to complete this exercise.")],1),t._v(" "),a("blockquote",[a("p",[t._v("See BS LMS for the due date and submission instructions. "),a("strong",[t._v("WEEK 2")])])]),t._v(" "),a("h2",{attrs:{id:"exercise-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exercise-2"}},[t._v("#")]),t._v(" Exercise 2")]),t._v(" "),a("h3",{attrs:{id:"arguments-environment-and-random-integers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arguments-environment-and-random-integers"}},[t._v("#")]),t._v(" Arguments, Environment, and Random Integers")]),t._v(" "),a("p",[t._v("Your second Dart exercise is to create a Dart console application in VSCode instead of in DartPad. You will be saving this project as a public Github repo and submitting the URL for the repo through BS LMS.")]),t._v(" "),a("p",[t._v("This exercise will give you practice working with command line arguments, environment variables, and building console applications in VSCode.")]),t._v(" "),a("p",[t._v("For this exercise we want to create two temporary Environment variables in the Terminal.")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MIN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MAX")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("The two variables will be called "),a("code",[t._v("MIN")]),t._v(" and "),a("code",[t._v("MAX")]),t._v(". They will each hold an integer value, although the values of all ENV variables are saved and extracted as Strings.")]),t._v(" "),a("p",[t._v("You will use these variables in the console app.")]),t._v(" "),a("p",[t._v("In your "),a("code",[t._v("bin")]),t._v(" folder there will be a dart file that contains the "),a("code",[t._v("void main()")]),t._v(" function.")]),t._v(" "),a("p",[t._v("In your "),a("code",[t._v("lib")]),t._v(" folder there will be a dart file that has a class called "),a("code",[t._v("Lucky")]),t._v(". The "),a("code",[t._v("Lucky")]),t._v(" class has a constructor which will create an instance of the class "),a("code",[t._v("Lucky")]),t._v(". The constructor will also read the two environment variables "),a("code",[t._v("MIN")]),t._v(" and "),a("code",[t._v("MAX")]),t._v(" and create a random integer between those two numbers. You will need to import both the "),a("code",[t._v("dart:io")]),t._v(" and "),a("code",[t._v("dart:math")]),t._v(" packages to be able to do these things.")]),t._v(" "),a("p",[t._v("Save the random "),a("code",[t._v("int")]),t._v(" as a member field (property) that can be accessed through the instance object.")]),t._v(" "),a("p",[t._v("Your "),a("code",[t._v("main")]),t._v(" function back in the "),a("code",[t._v("bin")]),t._v(" folder will read the "),a("code",[t._v("List")]),t._v(" of command line arguments. When you run the dart file, you should add a list of names as the arguments. Eg:")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("dart run bin/main.dart tony steve tilan nehmat\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("The "),a("code",[t._v("main")]),t._v(" function needs to loop through the list of names that were read from the command line arguments.")]),t._v(" "),a("p",[t._v("For each name:")]),t._v(" "),a("ul",[a("li",[t._v("capitalize the first letter of the name;")]),t._v(" "),a("li",[t._v("create an instance of the "),a("code",[t._v("Lucky")]),t._v(" class so you can access it's member field that has the random integer;")]),t._v(" "),a("li",[a("code",[t._v("print()")]),t._v(" a message "),a("code",[t._v('"Hello <name>. Your lucky number is <integer>"')]),t._v(".")])]),t._v(" "),a("p",[t._v("Replace the "),a("code",[t._v("<name>")]),t._v(" and "),a("code",[t._v("<integer")]),t._v("> parts of the output with the name from the arguments list and the member field from the "),a("code",[t._v("Lucky")]),t._v(" instance.")]),t._v(" "),a("p",[t._v("Reference the notes in "),a("RouterLink",{attrs:{to:"/modules/hybrid/dart/1-start.html"}},[t._v("Dart Fundamentals")]),t._v(" and "),a("RouterLink",{attrs:{to:"/modules/hybrid/dart/2-classes.html"}},[t._v("Dart Classes")]),t._v(" to complete this exercise.")],1),t._v(" "),a("p",[t._v("Turn your project into a public or private repo on Github and submit the Repo URL in BS LMS. If it is private, remember to invite "),a("code",[t._v("@prof3ssorSt3v3")]),t._v(".")]),t._v(" "),a("blockquote",[a("p",[t._v("See BS LMS for the due date and time. "),a("strong",[t._v("WEEK 4")])])]),t._v(" "),a("h2",{attrs:{id:"exercise-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exercise-3"}},[t._v("#")]),t._v(" Exercise 3")]),t._v(" "),a("h3",{attrs:{id:"dart-collections"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dart-collections"}},[t._v("#")]),t._v(" Dart Collections")]),t._v(" "),a("p",[t._v("The third Dart exercise is also a Dart console application in VSCode. You will be saving this project as a public or private Github repo and submitting the URL for the repo through BS LMS. If it is private, remember to invite "),a("code",[t._v("@prof3ssorSt3v3")]),t._v(".")]),t._v(" "),a("p",[t._v("This third exercise will give you practice working with Dart "),a("code",[t._v("List")]),t._v(" and "),a("code",[t._v("Map")]),t._v(".")]),t._v(" "),a("p",[t._v("Create a Dart class called "),a("code",[t._v("Students")]),t._v(" with the following features:")]),t._v(" "),a("ul",[a("li",[t._v("a constructor will accept a "),a("code",[t._v("List<Map<String, String>>")]),t._v(" or "),a("code",[t._v("List<Map<String, dynamic>>")]),t._v(".")]),t._v(" "),a("li",[t._v("the List will be saved in a member field called people which is type - "),a("code",[t._v("List<Map<String, String>>")]),t._v(" or "),a("code",[t._v("List<Map<String, dynamic>>")]),t._v(".")]),t._v(" "),a("li",[t._v("a "),a("code",[t._v("sort(String field)")]),t._v(" method that will sort the List based on the "),a("code",[t._v("field")]),t._v(" name that is passed to the method parameter.")]),t._v(" "),a("li",[t._v("an "),a("code",[t._v("output()")]),t._v(" method that will loop through each of the people in the list and "),a("code",[t._v("print()")]),t._v(" each of the items in the List.")]),t._v(" "),a("li",[t._v("a "),a("code",[t._v("plus(Map<String, String> person)")]),t._v(" method that will let you add a single "),a("code",[t._v("Map")]),t._v(" to the "),a("code",[t._v("List")]),t._v(".")]),t._v(" "),a("li",[t._v("a "),a("code",[t._v("remove(String field)")]),t._v(" method that will remove one or more Map item(s) from the "),a("code",[t._v("List")]),t._v(" using the "),a("code",[t._v("removeWhere()")]),t._v(" List method.")])]),t._v(" "),a("div",{staticClass:"language-dart line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Students")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dynamic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" people"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Students")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dynamic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("people"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" fieldName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//sort the List based on the fieldName in each Map.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//fieldName would be something like 'email' or 'first'")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//after sort call output()")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("output")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//loop and print each Map object properties and values")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("plus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dynamic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//add a person Map to the people List")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//last step is to call output")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" fieldName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//remove any `Map` item from the `List` that contains a property with the name fieldName")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Eg: {id: 2, first:'Steve', last:'Griffith', email: 'griffis@algonquincollege.com'}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// remove EACH Map in the LIST that has fieldName="email"')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//last step is to call output()")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br")])]),a("p",[t._v("Here is the "),a("a",{attrs:{href:"https://api.dart.dev/dart-core/List-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("reference for the List class"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Your main Dart file will have BOTH the main() method as well as the Students class.")]),t._v(" "),a("p",[t._v("Your Dart file needs to import the "),a("code",[t._v("dart:convert")]),t._v(" package so you can convert a JSON string into a "),a("code",[t._v("List<Map<String, dynamic>>")]),t._v(" that will be passed to the "),a("code",[t._v("Students")]),t._v(" constructor.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("main()")]),t._v(" method should have a String variable containing a JSON string. Convert it to a "),a("code",[t._v("List<Map<String, String>>")]),t._v(" and then call the "),a("code",[t._v("Students")]),t._v(" constructor. Then call the "),a("code",[t._v("sort")]),t._v(", "),a("code",[t._v("plus")]),t._v(", and "),a("code",[t._v("remove")]),t._v(" methods each at least once. Each of the "),a("code",[t._v("sort")]),t._v(", "),a("code",[t._v("plus")]),t._v(" and "),a("code",[t._v("remove")]),t._v(" methods will call the "),a("code",[t._v("output")]),t._v(" method to show the change in the List.")]),t._v(" "),a("p",[t._v("Here is a sample version of the List that you can use for testing. "),a("strong",[t._v("PLEASE")]),t._v(" edit the contents to customize them.")]),t._v(" "),a("div",{staticClass:"language-dart line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dart"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" json "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'\'\'\n[\n  {"id":1, "first":"Steve", "last":"Griffith", "email":"griffis@algonquincollege.com"},\n  {"id":2, "first":"Vladimir", "last":"Cezar", "email":"cezarv@algonquincollege.com"},\n  {"id":3, "first":"Tony", "last":"Davidson", "email":"davidst@algonquincollege.com"},\n  {"id":4, "first":"Adam", "last":"Robillard", "email":"robilla@algonquincollege.com"}\n]\n\'\'\'')])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("Reference the notes in "),a("RouterLink",{attrs:{to:"/modules/hybrid/dart/1-start.html"}},[t._v("Dart Fundamentals")]),t._v(" and "),a("RouterLink",{attrs:{to:"/modules/hybrid/dart/3-packages.html"}},[t._v("Dart Packages, Imports, and Futures")]),t._v(" to complete this exercise.")],1),t._v(" "),a("blockquote",[a("p",[t._v("See BS LMS for the due date and time. "),a("strong",[t._v("WEEK 6")])])]),t._v(" "),a("h2",{attrs:{id:"exercise-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exercise-4"}},[t._v("#")]),t._v(" Exercise 4")]),t._v(" "),a("h3",{attrs:{id:"async-http-and-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-http-and-json"}},[t._v("#")]),t._v(" ASYNC HTTP and JSON")]),t._v(" "),a("p",[t._v("The fourth Dart exercise is also a Dart console application. Remember to start with the "),a("code",[t._v("void main()")]),t._v(" function in your main dart file inside the "),a("code",[t._v("/bin")]),t._v(" folder.")]),t._v(" "),a("p",[t._v("Your app will use the "),a("code",[t._v("https://random-data-api.com/")]),t._v(" API or the "),a("code",[t._v("https://dummyjson.com/")]),t._v(" API and make an HTTP GET Request for some random "),a("strong",[t._v("user")]),t._v(" data. You should fetch 8-12 users.")]),t._v(" "),a("p",[t._v("Use the following packages:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("package:http/http.dart")]),t._v(" from "),a("code",[t._v("https://pub.dev/packages/http")]),t._v(";")]),t._v(" "),a("li",[a("code",[t._v("dart:convert")]),t._v(" to convert the JSON from the file into a List of Map objects.")]),t._v(" "),a("li",[a("code",[t._v("dart:async")]),t._v(" but this is a dependency of "),a("code",[t._v("http.dart")]),t._v(" so you won't have to write the import.")])]),t._v(" "),a("p",[t._v("Remember that the "),a("code",[t._v("http")]),t._v(" package needs to be included in your "),a("code",[t._v("pubspec.yaml")]),t._v(" file.")]),t._v(" "),a("p",[t._v("Use "),a("code",[t._v("async")]),t._v(" and "),a("code",[t._v("await")]),t._v(" for your "),a("code",[t._v("http.get")]),t._v(" method, and wrap it in a "),a("code",[t._v("try..catch")]),t._v(".")]),t._v(" "),a("p",[t._v("Loop through the Users from the HTTP Response of your HTTP Request and output the id, "),a("code",[t._v("first_name")]),t._v(", and "),a("code",[t._v("last_name")]),t._v(" of each user as a single string. There should be only one "),a("code",[t._v("print()")]),t._v(" method call for each user object.")]),t._v(" "),a("p",[t._v("You should create a "),a("code",[t._v("User")]),t._v(" class that turns each user "),a("code",[t._v("Map")]),t._v(" from the "),a("code",[t._v("List")]),t._v(" extracted from the JSON data returned in the HTTP Response.")]),t._v(" "),a("p",[t._v("The call to "),a("code",[t._v("print()")]),t._v(" can be inside a function called in main.dart or it can be an instance method inside a function that is part of your "),a("code",[t._v("User")]),t._v(" class.")]),t._v(" "),a("p",[t._v("You should be able to use "),a("code",[t._v("dart run")]),t._v(" from the Terminal to make your console app run from VSCode. Each time you run the program it should generate a different series of ids and names.")]),t._v(" "),a("p",[t._v("Reference the notes in "),a("RouterLink",{attrs:{to:"/modules/hybrid/dart/3-packages.html"}},[t._v("Dart Packages, Imports, and Futures")]),t._v(" to complete this exercise.")],1),t._v(" "),a("p",[t._v("Make your project a public Github Repo and submit the URL for your Repo in BS LMS.")]),t._v(" "),a("blockquote",[a("p",[t._v("See BS LMS for the due date and time. "),a("strong",[t._v("WEEK 9")])])])],1)}),[],!1,null,null,null);s.default=n.exports}}]);